/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gsom.ui.image_ui;

import com.gsom.ui.image_ui.listeners.ImageNetworkViewerListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.*;

/**
 *
 * @author Thush
 */
public class ImageNetworkViewer extends javax.swing.JFrame implements MouseListener {

    /**
     * Creates new form ImageNetworkViewer
     */
    public ImageNetworkViewer() {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        // Set the Main window's size
        setSize(600, 560);
        setLocationRelativeTo(null);
    }
    private Map<String, ArrayList<String>> map;

    public void viewGrid(ImageNetworkModel model) {
        gridHolderPanel.removeAll();
        //System.out.println(">> " + UIValues.getINPUT_FILE_LOCATION());

        map = model.getHitAndImageMap();

        gridHolderPanel = ImageGridHelper.getImageGridPanel(gridHolderPanel, map, this);
        // Set the scrollpane viewport
        gridScrollPane.setViewportView(gridHolderPanel);

    }

    @Override
    public void mouseClicked(MouseEvent e) {
        JLabel label = (JLabel) e.getSource();

        if (!label.isEnabled()) {
            label.setEnabled(true);
        } else {
            listener.clickedOnImage(label.getName(), map.get(label.getName()));
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        return;
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        return;
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        return;
    }

    @Override
    public void mouseExited(MouseEvent e) {
        return;
    }
    //  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dynamicGrid = new javax.swing.JPanel();
        gridScrollPane = new javax.swing.JScrollPane();
        gridHolderPanel = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        imgDirInputTextField = new javax.swing.JTextField();
        imgDirBrowseBtn = new javax.swing.JButton();
        outputFileTxt = new javax.swing.JTextField();
        outFileBrowser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        infoLbl = new javax.swing.JLabel();
        viewGridBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        imageSaveLocTxt = new javax.swing.JTextField();
        browseBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dynamic Grid Viewer");
        getContentPane().setLayout(null);

        mainPanel.setBackground(new java.awt.Color(204, 204, 255));
        mainPanel.setPreferredSize(new java.awt.Dimension(580, 600));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gridHolderPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        gridScrollPane.setViewportView(gridHolderPanel);

        javax.swing.GroupLayout dynamicGridLayout = new javax.swing.GroupLayout(dynamicGrid);
        dynamicGrid.setLayout(dynamicGridLayout);
        dynamicGridLayout.setHorizontalGroup(
            dynamicGridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dynamicGridLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gridScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addContainerGap())
        );
        dynamicGridLayout.setVerticalGroup(
            dynamicGridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dynamicGridLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gridScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainPanel.add(dynamicGrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 98, 570, 350));

        imgDirBrowseBtn.setText("Browse");
        imgDirBrowseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgDirBrowseBtnActionPerformed(evt);
            }
        });

        outputFileTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFileTxtActionPerformed(evt);
            }
        });

        outFileBrowser.setText("Browse");
        outFileBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outFileBrowserActionPerformed(evt);
            }
        });

        jLabel1.setText("Output File :");

        jLabel2.setText("Image Folder :");

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputFileTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(imgDirInputTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imgDirBrowseBtn)
                    .addComponent(outFileBrowser))
                .addGap(31, 31, 31))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputFileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outFileBrowser)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgDirInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgDirBrowseBtn)
                    .addComponent(jLabel2))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        mainPanel.add(buttonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 570, 80));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        infoLbl.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        infoLbl.setForeground(new java.awt.Color(255, 0, 51));
        infoLbl.setText("Please browse the related image directory");

        viewGridBtn.setText("View Image Grid");
        viewGridBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewGridBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(viewGridBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(closeBtn)
                            .addComponent(viewGridBtn))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(infoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        mainPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 570, 50));

        browseBtn.setText("Browse");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("Save Image");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageSaveLocTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(browseBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveBtn)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imageSaveLocTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseBtn)
                    .addComponent(saveBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 570, 40));

        getContentPane().add(mainPanel);
        mainPanel.setBounds(0, 0, 590, 580);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        setVisible(false);
    }//GEN-LAST:event_closeBtnActionPerformed
    ImageNetworkViewerListener listener;

    public void setImageNetworkViewerListener(ImageNetworkViewerListener listener) {
        this.listener = listener;
    }

    private void imgDirBrowseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgDirBrowseBtnActionPerformed
        JFileChooser chooser = new JFileChooser(".");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int choice = chooser.showOpenDialog(null);

        if (choice != JFileChooser.APPROVE_OPTION) {
            return;
        }


        //JOptionPane.showMessageDialog(null,chosenFile.getAbsolutePath());
        imgDirInputTextField.setText(chooser.getSelectedFile().getAbsolutePath());
        //UIValues.setIMAGE_FOLDER_LOCATION(chosenFile.getAbsolutePath()); -thush
        infoLbl.setVisible(false);




    }//GEN-LAST:event_imgDirBrowseBtnActionPerformed

    private void outFileBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outFileBrowserActionPerformed
        JFileChooser chooser = new JFileChooser(".");
        int choice = chooser.showOpenDialog(null);

        if (choice != JFileChooser.APPROVE_OPTION) {
            return;
        }
        outputFileTxt.setText(chooser.getSelectedFile().getAbsolutePath());

    }//GEN-LAST:event_outFileBrowserActionPerformed

    private void outputFileTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputFileTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputFileTxtActionPerformed

    private void viewGridBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewGridBtnActionPerformed
        String imgFolder = imgDirInputTextField.getText();
        String outputFile = outputFileTxt.getText();
        if (!imgFolder.isEmpty() && !outputFile.isEmpty()) {
            listener.readyToCalc(outputFile, imgFolder);
        } else {
            JOptionPane.showMessageDialog(null,"Please browse Image directory and Output directory");
        }
    }//GEN-LAST:event_viewGridBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        if(imageSaveLocTxt.getText()!= null && imageSaveLocTxt.getText().length()>0){
            listener.saveImageClicked(imageSaveLocTxt.getText(),ImageGridHelper.getGridHolderPanelImage(gridHolderPanel));
        }else{
            JOptionPane.showMessageDialog(null, "Please choose a fileName");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    
    
    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        JFileChooser chooser = new JFileChooser(".");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int choice = chooser.showOpenDialog(null);

        if (choice != JFileChooser.APPROVE_OPTION) {
            return;
        }
        //JOptionPane.showMessageDialog(null,chosenFile.getAbsolutePath());
        imageSaveLocTxt.setText(chooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_browseBtnActionPerformed

    public void populateAndView(ImageNetworkModel model) {
        viewGrid(model);
    }
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /*
//         * Set the Nimbus look and feel
//         */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /*
//         * If Nimbus (introduced in Java SE 6) is not available, stay with the
//         * default look and feel. For details see
//         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ImageNetworkViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ImageNetworkViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ImageNetworkViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ImageNetworkViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /*
//         * Create and display the form
//         */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                new ImageNetworkViewer().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeBtn;
    private javax.swing.JPanel dynamicGrid;
    private javax.swing.JPanel gridHolderPanel;
    private javax.swing.JScrollPane gridScrollPane;
    private javax.swing.JTextField imageSaveLocTxt;
    private javax.swing.JButton imgDirBrowseBtn;
    private javax.swing.JTextField imgDirInputTextField;
    private javax.swing.JLabel infoLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton outFileBrowser;
    private javax.swing.JTextField outputFileTxt;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton viewGridBtn;
    // End of variables declaration//GEN-END:variables
}
